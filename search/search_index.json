{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"CUBRID Vector CUBRID Vector Database Specification","title":"Home"},{"location":"#cubrid-vector","text":"CUBRID Vector Database Specification","title":"CUBRID Vector"},{"location":"vector-ddl/","text":"Vector DDL vector -- Equivalent to vector(2000) vector ( 512 ) -- 512-dimensional vector of float32 vector ( float64 , 128 ) -- 128-dimensional vector of float64 BNF < declaration > ::= \"vector\" [ \"(\" [ < vector_type > \",\" ] < dim > \")\" ] < vector_type > ::= \"float32\" | \"binary\" < dim > ::= < positive_integer > < positive_integer > ::= {digit}+ <dim> is a positive integer value between 1 and 2000 inclusive if and only if <vector_type> is float32. between 1 and 64000 inclusive if and only if <vector_type> is binary. Examples Create table CREATE TABLE items ( host_year INT NOT NULL PRIMARY KEY , embedding vector ( 3 ) ); Create column ALTER TABLE items ADD COLUMN embedding vector ( 3 );","title":"Vector DDL"},{"location":"vector-ddl/#vector-ddl","text":"vector -- Equivalent to vector(2000) vector ( 512 ) -- 512-dimensional vector of float32 vector ( float64 , 128 ) -- 128-dimensional vector of float64","title":"Vector DDL"},{"location":"vector-ddl/#bnf","text":"< declaration > ::= \"vector\" [ \"(\" [ < vector_type > \",\" ] < dim > \")\" ] < vector_type > ::= \"float32\" | \"binary\" < dim > ::= < positive_integer > < positive_integer > ::= {digit}+ <dim> is a positive integer value between 1 and 2000 inclusive if and only if <vector_type> is float32. between 1 and 64000 inclusive if and only if <vector_type> is binary.","title":"BNF"},{"location":"vector-ddl/#examples","text":"","title":"Examples"},{"location":"vector-ddl/#create-table","text":"CREATE TABLE items ( host_year INT NOT NULL PRIMARY KEY , embedding vector ( 3 ) );","title":"Create table"},{"location":"vector-ddl/#create-column","text":"ALTER TABLE items ADD COLUMN embedding vector ( 3 );","title":"Create column"},{"location":"vector-dml/","text":"Vector DML This page outlines the CRUD operations (Create, Read, Update, Delete) for vectors in a database. Create and Insert a Vector into a Table To insert vectors into a table: INSERT INTO items ( embedding ) VALUES ( '[1,2,3]' ), ( '[4,5,6]' ); Read Vectors To retrieve vectors from the table: SELECT * FROM items LIMIT 5 ; Read Nearest Neighbor Vectors You can retrieve the nearest neighbors using either vector distance operators or functions. Using a distance operator: SELECT * FROM items ORDER BY embedding <-> '[3,1,2]' LIMIT 5 ; Using a distance function: SELECT name FROM items ORDER BY l2_distance ( embedding , '[3, 1, 2]' ) LIMIT 5 ; Both of the above queries are equivalent. If no vector index is present, the \"exact nearest neighbor\" algorithm is applied. If a vector index exists, it will be used automatically. Note on Multiple Vector Indices You can create multiple indices for a single vector column, but each index must correspond to a different type of distance operator. A single vector column can only have one index for each distance type. Control Vector Index Usage /*+ VECTOR_INDEX_SCAN (my_col_name) */ : force vector index /*+ NO_VECTOR_INDEX_SCAN */ : force prevent vector index Force the usage of vector index, if present First, you need to create an ANN vector index on 'embedding' column of table 'items'. Refer to Vector Index page. You can place a hint to force the optimizer to use the vector index if present. If no index is found, the optimizer silently ignores the hint. SELECT /*+ VECTOR_INDEX_SCAN (my_col_name) */ name FROM items ORDER BY l2_distance ( embedding , '[3, 1, 2]' ) LIMIT 5 ; Abort the usage of vector index SELECT /*+ NO_VECTOR_INDEX_SCAN */ name FROM items ORDER BY l2_distance ( embedding , '[3, 1, 2]' ) LIMIT 5 ; Update vector UPDATE items SET embedding = '[1, 2, 3]' WHERE id = 1 ; Delete vector DELETE FROM items WHERE id = 1 ;","title":"Vector DML"},{"location":"vector-dml/#vector-dml","text":"This page outlines the CRUD operations (Create, Read, Update, Delete) for vectors in a database.","title":"Vector DML"},{"location":"vector-dml/#create-and-insert-a-vector-into-a-table","text":"To insert vectors into a table: INSERT INTO items ( embedding ) VALUES ( '[1,2,3]' ), ( '[4,5,6]' );","title":"Create and Insert a Vector into a Table"},{"location":"vector-dml/#read-vectors","text":"To retrieve vectors from the table: SELECT * FROM items LIMIT 5 ;","title":"Read Vectors"},{"location":"vector-dml/#read-nearest-neighbor-vectors","text":"You can retrieve the nearest neighbors using either vector distance operators or functions. Using a distance operator: SELECT * FROM items ORDER BY embedding <-> '[3,1,2]' LIMIT 5 ; Using a distance function: SELECT name FROM items ORDER BY l2_distance ( embedding , '[3, 1, 2]' ) LIMIT 5 ; Both of the above queries are equivalent. If no vector index is present, the \"exact nearest neighbor\" algorithm is applied. If a vector index exists, it will be used automatically. Note on Multiple Vector Indices You can create multiple indices for a single vector column, but each index must correspond to a different type of distance operator. A single vector column can only have one index for each distance type.","title":"Read Nearest Neighbor Vectors"},{"location":"vector-dml/#control-vector-index-usage","text":"/*+ VECTOR_INDEX_SCAN (my_col_name) */ : force vector index /*+ NO_VECTOR_INDEX_SCAN */ : force prevent vector index","title":"Control Vector Index Usage"},{"location":"vector-dml/#force-the-usage-of-vector-index-if-present","text":"First, you need to create an ANN vector index on 'embedding' column of table 'items'. Refer to Vector Index page. You can place a hint to force the optimizer to use the vector index if present. If no index is found, the optimizer silently ignores the hint. SELECT /*+ VECTOR_INDEX_SCAN (my_col_name) */ name FROM items ORDER BY l2_distance ( embedding , '[3, 1, 2]' ) LIMIT 5 ;","title":"Force the usage of vector index, if present"},{"location":"vector-dml/#abort-the-usage-of-vector-index","text":"SELECT /*+ NO_VECTOR_INDEX_SCAN */ name FROM items ORDER BY l2_distance ( embedding , '[3, 1, 2]' ) LIMIT 5 ;","title":"Abort the usage of vector index"},{"location":"vector-dml/#update-vector","text":"UPDATE items SET embedding = '[1, 2, 3]' WHERE id = 1 ;","title":"Update vector"},{"location":"vector-dml/#delete-vector","text":"DELETE FROM items WHERE id = 1 ;","title":"Delete vector"},{"location":"vector-index/","text":"Vector Index How to","title":"Vector Index"},{"location":"vector-index/#vector-index","text":"How to","title":"Vector Index"}]}